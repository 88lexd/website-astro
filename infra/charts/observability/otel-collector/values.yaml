---
opentelemetry-operator:
  enabled: true

# The default configuration for all collectors generated by the chart.
# Any collectors in the `collectors` are overlayed on top of this configuration.
defaultCRConfig:
  # Annotations for the collector's pods
  podAnnotations:
    prometheus.io/scrape: "true"

# Collectors is a map of collector configurations of the form:
# collectors:
#   collectorName:
#     enabled: true
#     name: "example"
# Each collector configuration is layered on top of the `defaultCRConfig`, overriding a default if set.
collectors:
  daemon:
    enabled: true
    suffix: daemon
    mode: daemonset
    resources:
      requests:
        cpu: 50m
        memory: 250Mi
      limits:
        cpu: "1"
        memory: 500Mi

    # Environment variables for the collector
    env: []
    # - name: ENV_VAR1
    #   value: value1
    # - name: ENV_VAR2
    #   value: value2

    # Tolerations for the collector to also run as Daemon on the master node
    tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"

    # Observability configuration for the collector
    observability:
      metrics:
        enableMetrics: true

    # Target allocator configuration
    targetAllocator:
      enabled: true
      # image: myregistry/myimage:latest
      replicas: 1
      allocationStrategy: per-node
      resources:
        requests:
          cpu: "50m"
          memory: "64Mi"
        limits:
          cpu: "500m"
          memory: "128Mi"

    # A scrape config file (part of the kube-stack Chart itself) to instruct the daemon collector to pull metrics from any matching targets on the same node with
    # prometheus.io/scrape=true
    scrape_configs_file: "daemon_scrape_configs.yaml"
    presets:
      logsCollection:
        enabled: true
      kubeletMetrics:
        enabled: true
      hostMetrics:
        enabled: true
      kubernetesAttributes:
        enabled: true
      kubernetesEvents:
        enabled: true
      clusterMetrics:
        enabled: true
    config:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
      processors:
        batch:
          send_batch_size: 1000
          timeout: 1s
          send_batch_max_size: 1500
        resourcedetection/env:
          detectors: [env]
          timeout: 2s
          override: false
      exporters:
        debug: {}

      service:
        pipelines:
          metrics:
            receivers:
              - otlp
            processors:
              - resourcedetection/env
              - batch
            exporters:
              - debug
          logs:
            receivers:
              - otlp
            processors:
              - resourcedetection/env
              - batch
            exporters:
              - debug
